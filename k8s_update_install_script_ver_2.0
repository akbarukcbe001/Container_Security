#!/bin/bash

#This the latest script for k8s version > 1.28.

#Customize the below lines to suit your IP's and hostname, REMEMBER TO UNHASH the lines after modification
echo is this IP of your machine?
echo " " >> /etc/hosts
echo "192.168.1.11 w1" >> /etc/hosts
echo "192.168.1.10 cp" >> /etc/hosts

#Use the first line for CP node only
hostnamectl set-hostname cp

# Use the below for Worker Node only, hash the above line when you run on worker node.
#hostnamectl set-hostname w1

sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null


cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

sudo swapoff -a

sudo apt-get update -y
sudo apt-get install -y software-properties-common curl apt-transport-https ca-certificates

##################**********************************************************############################################################
#IF USING CRI-O
#curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/Release.key |gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
#echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/ /" |tee /etc/apt/sources.list.d/cri-o.list
#sudo apt-get update -y
#sudo apt-get install -y cri-o
#sudo systemctl daemon-reload
#sudo systemctl enable crio --now
#sudo systemctl start crio.service
###################************************************************************##########################################################

apt-get update ; apt-get install -y containerd.io
mkdir -p /etc/containerd
containerd config default | tee /etc/containerd/config.toml
sed -i "s/SystemdCgroup = false/SystemdCgroup = true/g" /etc/containerd/config.toml

systemctl restart containerd

#FOR CRI CLI Tools
#VERSION="v1.28.0"
#wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
#sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
#rm -f crictl-$VERSION-linux-amd64.tar.gz

KUBERNETES_VERSION=1.29

sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update -y
sudo apt install kubelet kubeadm kubectl

######################################################

# install bash-completion
sudo apt-get install bash-completion

# Add the completion script to your .bashrc file
echo 'source <(kubectl completion bash)' >>~/.bashrc

# Apply changes
source ~/.bashrc
